{"version":3,"file":"static/js/469.03846d30.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","components/Api/ApiMoviesByQuery.jsx","pages/Movies.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <ul>\n        {movies.map((movie) => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <hr />\n    </div>\n  );\n};\n\nMoviesList.protoTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequiered,\n      title: PropTypes.string.isRequiered,\n    })\n  ).isRequired,\n};\n\n\nexport default MoviesList;\n","import axios from \"axios\";\n\nconst API_KEY = \"79fd63476190a574bb2d210b52a840b7\";\nconst BASE_URL = \"https://api.themoviedb.org/3\"; \n\nconst getMoviesByQuery = async (query) => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    console.error(\"Error fetching movies by query\", error);\n    return [];\n  }\n};\n\nexport default getMoviesByQuery;\n","import { useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport getMoviesByQuery from \"components/Api/ApiMoviesByQuery\";\nimport MoviesList from \"components/MovieList/MovieList\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieId = searchParams.get(\"movieId\") ?? \"\";\n\n  const [moviesByQuery, setMoviesByQuery] = useState([]);\n  const [isLoadingQuery, setIsLoadingQuery] = useState(false);\n  const [errorQuery, setErrorQuery] = useState(null);\n\n  useEffect(() => {\n    const fetchMoviesByQuery = async () => {\n      if (movieId.trim() === \"\") {\n        setMoviesByQuery([]);\n        return;\n      }\n\n      setIsLoadingQuery(true);\n      try {\n        const movies = await getMoviesByQuery(movieId);\n        setMoviesByQuery(movies);\n      } catch (error) {\n        setErrorQuery(error);\n      } finally {\n        setIsLoadingQuery(false);\n      }\n    };\n\n    fetchMoviesByQuery();\n  }, [movieId]);\n\n  const updateQueryString = (evt) => {\n    const movieIdValue = evt.target.value;\n    setSearchParams({ movieId: movieIdValue });\n  };\n\n  const handleSearch = () => {\n    setSearchParams({ movieId });\n  };\n\n  return (\n    <div>\n      <h1>Search Movies</h1>\n      <input type=\"text\" value={movieId} onChange={updateQueryString} />\n      <button onClick={handleSearch}>Search</button>\n      {isLoadingQuery && <p>Loading movies...</p>}\n      {errorQuery && <p>Oops... Something went wrong...</p>}\n      {moviesByQuery.length > 0 && <MoviesList movies={moviesByQuery} />}\n    </div>\n  );\n};\n\nexport default Movies;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","protoTypes","PropTypes","isRequired","getMoviesByQuery","query","url","axios","response","data","results","console","error","useSearchParams","searchParams","setSearchParams","movieId","get","useState","moviesByQuery","setMoviesByQuery","isLoadingQuery","setIsLoadingQuery","errorQuery","setErrorQuery","useEffect","fetchMoviesByQuery","trim","type","value","onChange","evt","movieIdValue","target","onClick","length","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","Error","name","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}