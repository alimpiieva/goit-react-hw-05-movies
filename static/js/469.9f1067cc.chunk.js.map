{"version":3,"file":"static/js/469.9f1067cc.chunk.js","mappings":"2KAsBA,IAnBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,4BACE,wBACGF,EAAOG,KAAI,SAACC,GAAD,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADL,OAQd,oBAGL,C,qICfKI,EAAgB,mCAAG,WAAOC,GAAP,gFACjBC,EADiB,UAFR,+BAEQ,iCAHT,mCAGS,kBAC0CD,GAD1C,kBAIEE,EAAAA,EAAAA,IAAUD,GAJZ,cAIfE,EAJe,yBAKdA,EAASC,KAAKC,SALA,uCAOrBC,QAAQC,MAAM,iCAAd,MAPqB,kBAQd,IARc,yDAAH,sDAYtB,I,kBCsCA,EAlDe,WAAO,IAAD,EACnB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAO,UAAGF,EAAaG,IAAI,kBAApB,QAAkC,GAE/C,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA4CF,EAAAA,EAAAA,WAAS,GAArD,eAAOG,EAAP,KAAuBC,EAAvB,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,MAA7C,eAAOK,EAAP,KAAmBC,EAAnB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,uFACF,KAAnBV,EAAQW,OADa,uBAEvBP,EAAiB,IAFM,iCAMzBE,GAAkB,GANO,kBAQFlB,EAAiBY,GARf,OAQjBtB,EARiB,OASvB0B,EAAiB1B,GATM,kDAWvB8B,EAAc,EAAD,IAXU,yBAavBF,GAAkB,GAbK,6EAAH,qDAiBxBI,GACD,GAAE,CAACV,IAWJ,OACE,4BACE,2CACA,kBAAOY,KAAK,OAAOC,MAAOb,EAASc,SAZb,SAACC,GACzB,IAAMC,EAAeD,EAAIE,OAAOJ,MAChCd,EAAgB,CAAEC,QAASgB,GAC5B,KAUG,mBAAQE,QARS,WACnBnB,EAAgB,CAAEC,QAAAA,GACnB,EAMG,oBACCK,IAAkB,6CAClBE,IAAc,2DACdJ,EAAcgB,OAAS,IAAK,SAAC,IAAD,CAAYzC,OAAQyB,MAGtD,C","sources":["components/MovieList/MovieList.jsx","components/Api/ApiMoviesByQuery.jsx","pages/Movies.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <ul>\n        {movies.map((movie) => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <hr />\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import axios from \"axios\";\n\nconst API_KEY = \"79fd63476190a574bb2d210b52a840b7\";\nconst BASE_URL = \"https://api.themoviedb.org/3\"; \n\nconst getMoviesByQuery = async (query) => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    console.error(\"Error fetching movies by query\", error);\n    return [];\n  }\n};\n\nexport default getMoviesByQuery;\n","import { useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport getMoviesByQuery from \"components/Api/ApiMoviesByQuery\";\nimport MoviesList from \"components/MovieList/MovieList\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieId = searchParams.get(\"movieId\") ?? \"\";\n\n  const [moviesByQuery, setMoviesByQuery] = useState([]);\n  const [isLoadingQuery, setIsLoadingQuery] = useState(false);\n  const [errorQuery, setErrorQuery] = useState(null);\n\n  useEffect(() => {\n    const fetchMoviesByQuery = async () => {\n      if (movieId.trim() === \"\") {\n        setMoviesByQuery([]);\n        return;\n      }\n\n      setIsLoadingQuery(true);\n      try {\n        const movies = await getMoviesByQuery(movieId);\n        setMoviesByQuery(movies);\n      } catch (error) {\n        setErrorQuery(error);\n      } finally {\n        setIsLoadingQuery(false);\n      }\n    };\n\n    fetchMoviesByQuery();\n  }, [movieId]);\n\n  const updateQueryString = (evt) => {\n    const movieIdValue = evt.target.value;\n    setSearchParams({ movieId: movieIdValue });\n  };\n\n  const handleSearch = () => {\n    setSearchParams({ movieId });\n  };\n\n  return (\n    <div>\n      <h1>Search Movies</h1>\n      <input type=\"text\" value={movieId} onChange={updateQueryString} />\n      <button onClick={handleSearch}>Search</button>\n      {isLoadingQuery && <p>Loading movies...</p>}\n      {errorQuery && <p>Oops... Something went wrong...</p>}\n      {moviesByQuery.length > 0 && <MoviesList movies={moviesByQuery} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["movies","location","useLocation","map","movie","to","id","state","from","title","getMoviesByQuery","query","url","axios","response","data","results","console","error","useSearchParams","searchParams","setSearchParams","movieId","get","useState","moviesByQuery","setMoviesByQuery","isLoadingQuery","setIsLoadingQuery","errorQuery","setErrorQuery","useEffect","fetchMoviesByQuery","trim","type","value","onChange","evt","movieIdValue","target","onClick","length"],"sourceRoot":""}