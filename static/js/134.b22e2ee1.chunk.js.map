{"version":3,"file":"static/js/134.b22e2ee1.chunk.js","mappings":"8KAIMA,EAAgB,mCAAG,6GAEMC,EAAAA,EAAAA,IAAA,6DAJf,qCAES,cAEXC,EAFW,yBAKVA,EAASC,KAAKC,SALJ,uCAOjBC,QAAQC,MAAM,kBAAd,MAPiB,kBAQV,IARU,yDAAH,qDAYtB,K,iHC+CA,UA3De,WAAO,IAAD,EACjB,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAO,UAAGF,EAAaG,IAAI,kBAApB,QAAkC,IAE/CC,EAAAA,EAAAA,YAAU,WACN,GAAgB,KAAZF,EAAgB,CAChB,IAAMG,EAAkB,mCAAG,8GAEElB,EAAAA,EAAAA,KAFF,OAEbmB,EAFa,OAGnBV,EAAiBU,GAHE,gDAKnBd,QAAQC,MAAM,aAAd,MALmB,yDAAH,qDAQxBY,GACH,CACA,GAAE,CAACH,IAER,IAAMK,EAAgBZ,EAAca,QAAO,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,SAAST,EAAzB,IAchD,OACI,4BACI,kBACIU,KAAK,OACLC,MAAOX,EACPY,SAjBc,SAAAC,GACtB,IAAMC,EAAeD,EAAIE,OAAOJ,MAChC,GAAqB,KAAjBG,EACA,OAAOf,EAAgB,CAAC,GAE5BA,EAAgB,CAAEC,QAASc,GAC9B,KAaO,mBAAQE,QAXK,WACjBjB,EAAgB,CAAEC,QAAAA,GACrB,EASO,qBACA,mBACA,wBACKK,EAAcY,KAAI,SAAAV,GACf,OACI,yBACI,SAAC,KAAD,CAAMW,GAAE,kBAAaX,EAAMY,IAAMC,MAAO,CAAEC,KAAM1B,GAAhD,SACKY,EAAMC,SAFND,EAAMY,GAMtB,OAEL,oBAGX,C","sources":["components/Api/Api.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"79fd63476190a574bb2d210b52a840b7\";\n\nconst getPopularMovies = async () => {\n    try {\n        const response = await axios.get(\n            `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}`\n        );\n        return response.data.results;\n    } catch (error) {\n        console.error(\"No movies found\", error);\n        return [];\n    }\n};\n\nexport default getPopularMovies;","import { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport getPopularMovies from \"components/Api/Api\";\n\nconst Movies = () => {\n    const [popularMovies, setPopularMovies] = useState([]);\n    const location = useLocation();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const movieId = searchParams.get('movieId') ?? '';\n\n    useEffect(() => {\n        if (movieId !== '') {\n            const fetchPopularMovies = async () => {\n                try {\n                    const movies = await getPopularMovies();\n                    setPopularMovies(movies);\n                } catch (error) {\n                    console.error(\"Not found:\", error);\n                }\n            };\n            fetchPopularMovies();\n        }\n        }, [movieId]);\n\n    const visibleMovies = popularMovies.filter(movie => movie.title.includes(movieId));\n\n    const updateQueryString = evt => {\n        const movieIdValue = evt.target.value;\n        if (movieIdValue === \"\") {\n            return setSearchParams({});\n        }\n        setSearchParams({ movieId: movieIdValue });\n    };\n\n    const handleSearch = () => {\n        setSearchParams({ movieId });\n    };\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                value={movieId}\n                onChange={updateQueryString}\n            />\n            <button onClick={handleSearch}>Search</button>\n            <hr/>\n            <ul>\n                {visibleMovies.map(movie => {\n                    return (\n                        <li key={movie.id}>\n                            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                                {movie.title}\n                            </Link>\n                        </li>\n                    );\n                })}\n            </ul>\n            <hr/>\n        </div>\n    );\n};\n\nexport default Movies;\n"],"names":["getPopularMovies","axios","response","data","results","console","error","useState","popularMovies","setPopularMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","movieId","get","useEffect","fetchPopularMovies","movies","visibleMovies","filter","movie","title","includes","type","value","onChange","evt","movieIdValue","target","onClick","map","to","id","state","from"],"sourceRoot":""}