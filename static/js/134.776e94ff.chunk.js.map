{"version":3,"file":"static/js/134.776e94ff.chunk.js","mappings":"8KAIMA,EAAgB,mCAAG,6GAEMC,EAAAA,EAAAA,IAAA,6DAJf,qCAES,cAEXC,EAFW,yBAKVA,EAASC,KAAKC,SALJ,uCAOjBC,QAAQC,MAAM,kBAAd,MAPiB,kBAQV,IARU,yDAAH,qDAYtB,K,2DCMA,IAnBmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,4BACE,wBACGF,EAAOG,KAAI,SAACC,GAAD,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADL,OAQd,oBAGL,C,iHCoCD,UApDe,WAAO,IAAD,EAEjB,GAA0CI,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAO,UAAGF,EAAaG,IAAI,kBAApB,QAAkC,GAC/C,GAAkCP,EAAAA,EAAAA,WAAS,GAA3C,eAAOQ,EAAP,KAAkBC,EAAlB,KACA,GAA0BT,EAAAA,EAAAA,UAAS,MAAnC,eAAOX,EAAP,KAAcqB,EAAd,MAGAC,EAAAA,EAAAA,YAAU,WACN,GAAgB,KAAZL,EAAgB,CAChB,IAAMM,EAAkB,mCAAG,2FACvBH,GAAa,GADU,mBAGE1B,EAAAA,EAAAA,KAHF,OAGbO,EAHa,OAInBY,EAAiBZ,GACjBmB,GAAa,GALM,gDAOnBC,EAAS,EAAD,IACRD,GAAa,GARM,yDAAH,qDAWxBG,GACH,CACA,GAAE,CAACN,IAER,IAAMO,EAAgBZ,EAAca,QAAO,SAAApB,GAAK,OAAIA,EAAMK,MAAMgB,SAAST,EAAzB,IAc/C,OACD,2BACGE,IAAa,wCACbnB,IAAS,6DACV,kBAAO2B,KAAK,OAAOC,MAAOX,EAASY,SAhBX,SAAAC,GACtB,IAAMC,EAAeD,EAAIE,OAAOJ,MAChC,GAAqB,KAAjBG,EACA,OAAOf,EAAgB,CAAC,GAE5BA,EAAgB,CAAEC,QAASc,GAC9B,KAWC,mBAAQE,QATW,WACjBjB,EAAgB,CAAEC,QAAAA,GACrB,EAOC,qBACA,kBACCL,EAAcsB,OAAS,IAAK,SAAC,IAAD,CAAYjC,OAAQuB,MAGtD,C","sources":["components/Api/Api.jsx","components/MovieList/MovieList.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"79fd63476190a574bb2d210b52a840b7\";\n\nconst getPopularMovies = async () => {\n    try {\n        const response = await axios.get(\n            `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}`\n        );\n        return response.data.results;\n    } catch (error) {\n        console.error(\"No movies found\", error);\n        return [];\n    }\n};\n\nexport default getPopularMovies;","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <ul>\n        {movies.map((movie) => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <hr />\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import { useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport getPopularMovies from \"components/Api/Api\";\nimport MoviesList from \"components/MovieList/MovieList\";\nconst Movies = () => {\n\n    const [popularMovies, setPopularMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const movieId = searchParams.get('movieId') ?? '';\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n\n    useEffect(() => {\n        if (movieId !== '') {\n            const fetchPopularMovies = async () => {\n                setIsLoading(true);\n                try {\n                    const movies = await getPopularMovies();\n                    setPopularMovies(movies);\n                    setIsLoading(false);\n                } catch (error) {\n                    setError(error);\n                    setIsLoading(false);\n                }\n            };\n            fetchPopularMovies();\n        }\n        }, [movieId]);\n\n    const visibleMovies = popularMovies.filter(movie => movie.title.includes(movieId));\n\n    const updateQueryString = evt => {\n        const movieIdValue = evt.target.value;\n        if (movieIdValue === \"\") {\n            return setSearchParams({});\n        }\n        setSearchParams({ movieId: movieIdValue });\n    };\n\n    const handleSearch = () => {\n        setSearchParams({ movieId });\n    };\n\n     return (\n    <div>\n      {isLoading && <div>Loading...</div>}\n      {error && <p>Ooops... Something went wrong...</p>}\n      <input type=\"text\" value={movieId} onChange={updateQueryString} />\n      <button onClick={handleSearch}>Search</button>\n      <hr />\n      {popularMovies.length > 0 && <MoviesList movies={visibleMovies} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["getPopularMovies","axios","response","data","results","console","error","movies","location","useLocation","map","movie","to","id","state","from","title","useState","popularMovies","setPopularMovies","useSearchParams","searchParams","setSearchParams","movieId","get","isLoading","setIsLoading","setError","useEffect","fetchPopularMovies","visibleMovies","filter","includes","type","value","onChange","evt","movieIdValue","target","onClick","length"],"sourceRoot":""}