{"version":3,"file":"static/js/598.78a4dc6e.chunk.js","mappings":"8PAIMA,EAAe,mCAAG,WAAOC,GAAP,gGAEGC,EAAAA,EAAAA,IAAA,6CACiBD,GACtC,CACAE,OAAQ,CACNC,QARQ,sCAEQ,cAEdC,EAFc,yBASbA,EAASC,MATI,uCAWpBC,QAAQC,MAAM,gCAAd,MAXoB,kBAYb,MAZa,yDAAH,sDAgBrB,I,SC6DA,EA5EqB,WAAO,IAAD,IACjBP,GAAYQ,EAAAA,EAAAA,MAAZR,QACFS,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAC3D,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCF,EAAAA,EAAAA,WAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACA,GAA0BR,EAAAA,EAAAA,UAAS,MAAnC,eAAOR,EAAP,KAAciB,EAAd,KAyBA,IAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,2FACxBH,GAAa,GADW,kBAGAxB,EAAgBC,GAHhB,OAGhB2B,EAHgB,OAItBV,EAAgBU,GAChBJ,GAAa,GALS,gDAOtBC,EAAS,EAAD,IACRD,GAAa,GARS,yDAAH,qDAWvBG,GACD,GAAE,CAAC1B,KAEJyB,EAAAA,EAAAA,YAAU,WACJP,EACFG,GAAY,GACHD,GACTD,GAAe,EAElB,GAAE,CAACD,EAAaE,IAEbE,EACF,OAAO,wCAGT,GAAIf,EACF,OAAO,2DAGT,IAAKS,EACH,OAAO,wCAGT,IAAMY,EAAQ,0CAAsCZ,EAAaa,aAEjE,OACE,iCACE,2CAAmBb,EAAac,UAChC,gBAAKC,IAAKH,EAAUI,IAAKhB,EAAac,SACtC,sCAAcd,EAAaiB,aAC3B,0CAAkBjB,EAAakB,iBAE/B,SAAC,KAAD,CAAMC,GAAIxB,EAAoByB,QAA9B,6BACA,mBACA,2BACE,yBACE,SAAC,KAAD,CAAMD,GAAE,OAAUE,QAAS,kBAAMhB,GAAY,EAAlB,EAA3B,qBAIF,yBACE,SAAC,KAAD,CAAMc,GAAE,UAAaE,QAAS,kBAAMlB,GAAe,EAArB,EAA9B,2BAKJ,mBACA,SAAC,EAAAmB,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/Api/ApiMovieDetails.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '79fd63476190a574bb2d210b52a840b7';\n\nconst getMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    return null;\n  }\n};\n\nexport default getMovieDetails;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Link, Outlet, useParams, useLocation } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport getMovieDetails from \"components/Api/ApiMovieDetails.jsx\";\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? \"/movies\");\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [showReviews, setShowReviews] = useState(false);\n  const [showCast, setShowCast] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      setIsLoading(true);\n      try {\n        const details = await getMovieDetails(movieId);\n        setMovieDetails(details);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error);\n        setIsLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (showReviews) {\n      setShowCast(false);\n    } else if (showCast) {\n      setShowReviews(false);\n    }\n  }, [showReviews, showCast]);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <p>Oops... Something went wrong...</p>;\n  }\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  const imageUrl = `https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`;\n\n  return (\n    <>\n      <h1>MovieDetails: {movieDetails.title}</h1>\n      <img src={imageUrl} alt={movieDetails.title} />\n      <p>Overview: {movieDetails.overview}</p>\n      <p>Release Date: {movieDetails.release_date}</p>\n\n      <Link to={backLinkLocationRef.current}>Back to movies</Link>\n      <hr />\n      <ul>\n        <li>\n          <Link to={`cast`} onClick={() => setShowCast(true)}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to={`reviews`} onClick={() => setShowReviews(true)}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <hr />\n      <Suspense fallback={<div>Loading details...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;"],"names":["getMovieDetails","movieId","axios","params","api_key","response","data","console","error","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useState","movieDetails","setMovieDetails","showReviews","setShowReviews","showCast","setShowCast","isLoading","setIsLoading","setError","useEffect","fetchMovieDetails","details","imageUrl","poster_path","title","src","alt","overview","release_date","to","current","onClick","Suspense","fallback"],"sourceRoot":""}