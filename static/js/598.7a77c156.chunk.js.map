{"version":3,"file":"static/js/598.7a77c156.chunk.js","mappings":"8PAIMA,EAAe,mCAAG,WAAOC,GAAP,gGAEGC,EAAAA,EAAAA,IAAA,6CACiBD,GACtC,CACAE,OAAQ,CACNC,QARQ,sCAEQ,cAEdC,EAFc,yBASbA,EAASC,MATI,uCAWpBC,QAAQC,MAAM,gCAAd,MAXoB,kBAYb,MAZa,yDAAH,sDAgBrB,I,SCwCA,EAvDqB,WAAO,IAAD,EACjBP,GAAYQ,EAAAA,EAAAA,MAAZR,QACFS,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,KAC3D,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOR,EAAP,KAAca,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,2FACxBH,GAAa,GADW,kBAGApB,EAAgBC,GAHhB,OAGhBuB,EAHgB,OAItBN,EAAgBM,GAJM,gDAMtBH,EAAS,EAAD,IANc,yBAQtBD,GAAa,GARS,4EAAH,qDAWvBG,GACD,GAAE,CAACtB,KAGF,gCACGkB,IAAa,wCACbX,IAAS,2DACTS,IACC,iCACE,SAAC,KAAD,CAAMQ,GAAIb,EAAoBc,QAA9B,6BACA,2CAAmBT,EAAaU,UAChC,gBAAKC,IAAG,0CAAqCX,EAAaY,aAAeC,IAAKb,EAAaU,SAC3F,sCAAcV,EAAac,aAC3B,0CAAkBd,EAAae,iBAG/B,mBACA,2BACE,yBACE,SAAC,KAAD,CAAMP,GAAE,OAAR,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAE,UAAR,2BAGJ,mBACA,SAAC,EAAAQ,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,WAMX,C","sources":["components/Api/ApiMovieDetails.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '79fd63476190a574bb2d210b52a840b7';\n\nconst getMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    return null;\n  }\n};\n\nexport default getMovieDetails;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Link, Outlet, useParams, useLocation } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport getMovieDetails from \"components/Api/ApiMovieDetails.jsx\";\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from || \"/\");\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      setIsLoading(true);\n      try {\n        const details = await getMovieDetails(movieId);\n        setMovieDetails(details);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <div>Loading...</div>}\n      {error && <p>Oops... Something went wrong...</p>}\n      {movieDetails && (\n        <>\n          <Link to={backLinkLocationRef.current}>Back to movies</Link>\n          <h1>MovieDetails: {movieDetails.title}</h1>\n          <img src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`} alt={movieDetails.title} />\n          <p>Overview: {movieDetails.overview}</p>\n          <p>Release Date: {movieDetails.release_date}</p>\n\n          \n          <hr />\n          <ul>\n            <li>\n              <Link to={`cast`}>Cast</Link>\n            </li>\n            <li>\n              <Link to={`reviews`}>Reviews</Link>\n            </li>\n          </ul>\n          <hr />\n          <Suspense fallback={<div>Loading details...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["getMovieDetails","movieId","axios","params","api_key","response","data","console","error","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","setError","useEffect","fetchMovieDetails","details","to","current","title","src","poster_path","alt","overview","release_date","Suspense","fallback"],"sourceRoot":""}