{"version":3,"file":"static/js/733.b63b15cd.chunk.js","mappings":"6OAKMA,EAAe,mCAAG,WAAOC,GAAP,gGAEOC,EAAAA,EAAAA,IAAA,6CACmBD,EADnB,YAEnB,CACAE,OAAQ,CACJC,QARA,sCAEQ,cAEVC,EAFU,yBASTA,EAASC,MATA,uCAWhBC,QAAQC,MAAM,mBAAd,MAXgB,kBAYT,MAZS,yDAAH,sDAgBrB,I,2BCuCA,EAvDa,WACX,IAAQP,GAAYQ,EAAAA,EAAAA,MAAZR,QACR,GAAwBS,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOF,EAAP,KAAcO,EAAd,KAoBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,2FACxBH,GAAa,GADW,kBAGAd,EAAgBC,GAHhB,QAGhBiB,EAHgB,SAKpBN,EAAQM,EAAQP,MALI,gDAQtBI,EAAS,EAAD,IARc,yBAUtBD,GAAa,GAVS,4EAAH,qDAavBG,GACD,GAAE,CAAChB,IAEAY,GACK,gBAAKM,UAAU,cAAf,6BAGLX,GACK,cAAGW,UAAU,0BAAb,kEAIP,4BACE,eAAIA,UAAU,cAAd,mBACA,eAAIA,UAAU,8CAAd,SACGR,EAAKS,KAAI,SAACC,GAAD,OACR,gBAAmBF,UAAU,mBAA7B,WACE,eAAGA,UAAU,OAAb,mBAA2BE,EAAMC,QAChCD,EAAME,cACL,gBACEC,IAAG,0CAAqCH,EAAME,cAC9CE,IAAKJ,EAAMC,KACXH,UAAU,8BAGV,gBAAKK,IAzCA,8EAyCiBC,IAAKJ,EAAMC,KAAMH,UAAU,+BAT9CE,EAAMK,GADP,QAiBjB,C","sources":["components/Api/ApiCast.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\n\nconst API_KEY = '79fd63476190a574bb2d210b52a840b7';\n\nconst getMovieCredits = async (movieId) => {\n    try {\n        const response = await axios.get(\n            `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n            {\n            params: {\n                api_key: API_KEY,\n            },\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Nothing to show:', error);\n        return null;\n    }\n};\n\nexport default getMovieCredits;","import React, { useState, useEffect } from \"react\";\nimport getMovieCredits from \"components/Api/ApiCast.jsx\";\nimport { useParams } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n    \n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      setIsLoading(true);\n      try {\n        const credits = await getMovieCredits(movieId);\n        if (credits) {\n          setCast(credits.cast);\n        }\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieCredits();\n  }, [movieId]);\n\n  if (isLoading) {\n    return <div className=\"text-center\">Loading cast...</div>;\n  }\n\n  if (error) {\n    return <p className=\"text-danger text-center\">Oops... Something went wrong while fetching cast...</p>;\n  }\n\n  return (\n    <div>\n      <h2 className=\"text-center\">Cast</h2>\n      <ul className=\"list-unstyled d-flex justify-content-center\">\n        {cast.map((actor) => (\n          <li key={actor.id} className=\"text-center mx-3\">\n            <p className=\"mb-1\">Name: {actor.name}</p>\n            {actor.profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w300/${actor.profile_path}`}\n                alt={actor.name}\n                className=\"img-fluid rounded-circle\"\n              />\n            ) : (\n                <img src={defaultImg} alt={actor.name} className=\"img-fluid rounded-circle\" />\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["getMovieCredits","movieId","axios","params","api_key","response","data","console","error","useParams","useState","cast","setCast","isLoading","setIsLoading","setError","useEffect","fetchMovieCredits","credits","className","map","actor","name","profile_path","src","alt","id"],"sourceRoot":""}